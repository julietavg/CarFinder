.filter-panel-container {
  position: relative;
  z-index: 90;
}

.filter-toggle-btn {
  display: flex;
  align-items: center;
  gap: 10px;
  background: var(--accent-primary);
  color: var(--text-primary);
  border: 1px solid var(--border-light);
  border-radius: var(--radius-md);
  padding: 10px 15px;
  cursor: pointer;
  transition: var(--transition-default);
  font-weight: 500;
  box-shadow: 0 4px 15px var(--shadow-dark);
}

.filter-toggle-btn svg {
  transition: transform 0.3s ease;
}

.filter-toggle-btn:hover {
  background: var(--accent-secondary);
  transform: translateY(-2px);
}

.filter-toggle-btn:active {
  transform: translateY(0);
}

.expanded .filter-toggle-btn {
  background: var(--accent-tertiary);
}

.expanded .filter-toggle-btn svg {
  transform: rotate(90deg);
}

.filter-indicator {
  background: var(--accent-tertiary);
  color: var(--text-primary);
  border-radius: 50%;
  width: 20px;
  height: 20px;
  font-size: 0.75rem;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: 5px;
}

.filter-panel {
  position: absolute;
  top: calc(100% + 10px);
  left: 0;
  width: 380px;
  background: var(--card-bg);
  border-radius: var(--radius-lg);
  box-shadow: 0 15px 40px var(--shadow-dark);
  border: 1px solid var(--border-light);
  display: none;
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.expanded .filter-panel {
  display: block;
  opacity: 1;
  transform: translateY(0);
  animation: fadeInUp 0.3s cubic-bezier(0.2, 0.8, 0.2, 1);
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.filter-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 15px 20px;
  border-bottom: 1px solid var(--border-light);
}

.filter-header h3 {
  margin: 0;
  color: var(--text-primary);
  font-size: 1.2rem;
  font-weight: 500;
}

.close-filter-btn {
  background: none;
  border: none;
  color: var(--text-secondary);
  font-size: 1.5rem;
  cursor: pointer;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: var(--transition-default);
}

.close-filter-btn:hover {
  background: var(--accent-primary);
  color: var(--text-primary);
}

.filter-content {
  max-height: 500px;
  overflow-y: auto;
  padding: 20px;
}

.filter-section {
  margin-bottom: 25px;
}

.filter-section h4 {
  margin: 0 0 12px 0;
  color: var(--text-primary);
  font-size: 1.05rem;
  font-weight: 500;
}

.range-inputs {
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.range-input {
  display: flex;
  flex-direction: column;
}

.range-input label {
  font-size: 0.85rem;
  color: var(--text-secondary);
  margin-bottom: 5px;
}

.range-input input[type="range"] {
  width: 100%;
  height: 6px;
  background: var(--accent-secondary);
  border-radius: 3px;
  appearance: none;
  outline: none;
}

.range-input input[type="range"]::-webkit-slider-thumb {
  appearance: none;
  width: 18px;
  height: 18px;
  background: var(--accent-tertiary);
  border-radius: 50%;
  cursor: pointer;
  transition: transform 0.2s ease, background 0.2s ease;
}

.range-input input[type="range"]::-webkit-slider-thumb:hover {
  transform: scale(1.2);
  background: var(--accent-hover);
}

.range-value {
  margin-top: 10px;
  font-size: 0.9rem;
  color: var(--text-primary);
  font-weight: 500;
}

.checkbox-group {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
}

.checkbox-item {
  display: flex;
  align-items: center;
  gap: 5px;
  min-width: 120px;
}

.checkbox-item input[type="checkbox"] {
  appearance: none;
  width: 18px;
  height: 18px;
  background: var(--accent-primary);
  border-radius: 4px;
  cursor: pointer;
  position: relative;
  transition: var(--transition-default);
}

.checkbox-item input[type="checkbox"]:checked {
  background: var(--accent-tertiary);
}

.checkbox-item input[type="checkbox"]::after {
  content: '';
  position: absolute;
  top: 2px;
  left: 6px;
  width: 6px;
  height: 12px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg) scale(0);
  opacity: 0;
  transition: transform 0.2s ease, opacity 0.2s ease;
}

.checkbox-item input[type="checkbox"]:checked::after {
  transform: rotate(45deg) scale(1);
  opacity: 1;
}

.checkbox-item label {
  font-size: 0.9rem;
  color: var(--text-secondary);
  cursor: pointer;
  transition: color 0.2s ease;
}

.checkbox-item:hover label {
  color: var(--text-primary);
}

.filter-actions {
  display: flex;
  justify-content: flex-end;
  gap: 15px;
  padding: 15px 20px;
  border-top: 1px solid var(--border-light);
}

.reset-btn {
  background: transparent;
  border: 1px solid var(--border-light);
  color: var(--text-secondary);
  padding: 10px 15px;
  border-radius: var(--radius-sm);
  cursor: pointer;
  font-size: 0.9rem;
  transition: var(--transition-default);
}

.reset-btn:hover {
  background: var(--accent-primary);
  color: var(--text-primary);
}

.apply-btn {
  background: var(--accent-tertiary);
  border: none;
  color: var(--text-primary);
  padding: 10px 20px;
  border-radius: var(--radius-sm);
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: 500;
  transition: var(--transition-default);
  position: relative;
  overflow: hidden;
}

.apply-btn:before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: all 0.6s ease;
}

.apply-btn:hover:before {
  left: 100%;
}

.apply-btn:hover {
  background: var(--accent-hover);
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.apply-btn:active {
  transform: translateY(0);
}

@media screen and (max-width: 576px) {
  .filter-panel {
    width: 300px;
    right: 0;
    left: auto;
  }
  
  .checkbox-item {
    min-width: 100px;
  }
}

@media (prefers-reduced-motion: reduce) {
  .filter-toggle-btn,
  .filter-panel,
  .apply-btn,
  .reset-btn,
  .checkbox-item input[type="checkbox"],
  .checkbox-item input[type="checkbox"]::after {
    transition: none !important;
    animation: none !important;
    transform: none !important;
  }
}
